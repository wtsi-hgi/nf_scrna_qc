// General resource configuration applicable to all profiles

process {
    // error strategy
    errorStrategy = 'retry'
    errorStrategy = 'terminate'
    //maxRetries = 2

    // basic resources
    cpus = 1
    memory = 15.GB
    //time = { 20.m * task.attempt }

    // basic output settings
    publish_mode = "symlink" // symlink or copy

    // process-specific resources
    withName: run_scrublet {
        memory = { 25.GB * task.attempt }
    }
    withName: make_cellmetadata_pipeline_input {
        memory = { 5.GB * task.attempt }
    }
    withName: merge_samples {
        memory = { 20.GB * task.attempt }
    }
    withName: normalize_and_pca {
        memory = { 50.GB * task.attempt }
        cpus = 8
    }
    withName: subset_pcs {
        memory = { 5.GB * task.attempt }
    }
    withName: harmony {
        memory = { 20.GB * task.attempt }
    }
    withName: bbknn {
        memory = { 20.GB * task.attempt }
        cpus = 4
    }
    withName: cluster {
        memory = { 20.GB * task.attempt }
        cpus = 4
    }
    withName: cluster_validate_resolution_sklearn {
        memory = { 40.GB * task.attempt }
        cpus = { 8 * task.attempt }
    }
    withName: cluster_validate_resolution_keras {
        memory = { 80.GB * task.attempt }
        cpus = 1
    }
    withName: plot_resolution_validate {
        memory = { 20.GB * task.attempt }
        cpus = 1
    }
    withName: cluster_markers {
        memory = { 15.GB * task.attempt }
        cpus = 4
    }
    withName: cellex_cluster_markers {
        memory = { 50.GB * task.attempt }
    }
    withName: merge_clusters {
        memory = { 30.GB * task.attempt }
        cpus = 8
    }
    withName: convert_seurat {
        memory = { 60.GB * task.attempt }
    }
    withName: umap_calculate {
        memory = { 125.GB * task.attempt }
        cpus = 8
    }
    withName: umap_gather {
        memory = { 150.GB * task.attempt }
    }
    withName: umap_calculate_and_plot {
        memory = { 50.GB * task.attempt }
        cpus = 8
    }
    withName: sccaf_assess_clustering {
        memory = { 16.GB * task.attempt }
        cpus = 4 //{ 4 * task.attempt }
    }
    withName: sccaf_optimize_clustering {
        memory = 16.GB //{ 16.GB * task.attempt }
        cpus = 4
    }
    withName: split_h5ad_by_batch {
        memory = { 8.GB * task.attempt }
        cpus = 1
    }
} // end process

timeline {
    enabled = true
}
